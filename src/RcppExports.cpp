// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// calcSens
double calcSens(NumericMatrix h, NumericMatrix m);
RcppExport SEXP _CAMO_calcSens(SEXP hSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(calcSens(h, m));
    return rcpp_result_gen;
END_RCPP
}
// calcSpec
double calcSpec(NumericMatrix h, NumericMatrix m);
RcppExport SEXP _CAMO_calcSpec(SEXP hSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(calcSpec(h, m));
    return rcpp_result_gen;
END_RCPP
}
// calcPrec
double calcPrec(NumericMatrix h, NumericMatrix m);
RcppExport SEXP _CAMO_calcPrec(SEXP hSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(calcPrec(h, m));
    return rcpp_result_gen;
END_RCPP
}
// calcESens
double calcESens(NumericMatrix h, NumericMatrix m);
RcppExport SEXP _CAMO_calcESens(SEXP hSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(calcESens(h, m));
    return rcpp_result_gen;
END_RCPP
}
// calcESpec
double calcESpec(NumericMatrix h, NumericMatrix m);
RcppExport SEXP _CAMO_calcESpec(SEXP hSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(calcESpec(h, m));
    return rcpp_result_gen;
END_RCPP
}
// calcEPrec
double calcEPrec(NumericMatrix h, NumericMatrix m);
RcppExport SEXP _CAMO_calcEPrec(SEXP hSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(calcEPrec(h, m));
    return rcpp_result_gen;
END_RCPP
}
// MCMC
Rcpp::List MCMC(NumericVector Z, int iteration, double const gamma);
RcppExport SEXP _CAMO_MCMC(SEXP ZSEXP, SEXP iterationSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< double const >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(MCMC(Z, iteration, gamma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CAMO_calcSens", (DL_FUNC) &_CAMO_calcSens, 2},
    {"_CAMO_calcSpec", (DL_FUNC) &_CAMO_calcSpec, 2},
    {"_CAMO_calcPrec", (DL_FUNC) &_CAMO_calcPrec, 2},
    {"_CAMO_calcESens", (DL_FUNC) &_CAMO_calcESens, 2},
    {"_CAMO_calcESpec", (DL_FUNC) &_CAMO_calcESpec, 2},
    {"_CAMO_calcEPrec", (DL_FUNC) &_CAMO_calcEPrec, 2},
    {"_CAMO_MCMC", (DL_FUNC) &_CAMO_MCMC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_CAMO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
